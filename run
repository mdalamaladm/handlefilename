#!/bin/bash

# Colourise the output
RED='\033[0;31m'        # Red
GRE='\033[0;32m'        # Green
YEL='\033[1;33m'        # Yellow
NCL='\033[0m'           # No Color
META_TYPE=0
META_CATEGORY=1
META_DATE=2
META_PLACE=3
META_STATUS=4
META_CONFIRMED=5

get_meta() {
  local arr
  local IFS=']'
  read -r -a arr <<< "$2"
  echo ${arr[$1]:1}
}

get_meta_value() {
  if [[ $1 == 'TYPE' ]]; then echo $META_TYPE
  elif [[ $1 == 'CATERGORY' ]]; then echo $META_CATERGORY
  elif [[ $1 == 'DATE' ]]; then echo $META_DATE
  elif [[ $1 == 'PLACE' ]]; then echo $META_PLACE
  elif [[ $1 == 'STATUS' ]]; then echo $META_STATUS
  elif [[ $1 == 'CONFIRMED' ]]; then echo $META_CONFIRMED
  fi
}

handle_file() {
    FILE_NAME="$(basename "${entry}")"
    DIR="$(dirname "${entry}")"
	OLD_NAME="${entry}"

	if [[ $ACTION == "prepend" ]]; then
	        NEW_NAME="$DIR/$ACTIONARG$FILE_NAME"
		mv "$OLD_NAME" "$NEW_NAME";
	elif [[ $ACTION == "insert" ]]; then
		local result
		IFS='|' read -ra result <<< "$ACTIONARG"
		text_target="${result[0]}"
		text_added="${result[1]}"
		insert_direction="${result[2]}"

		if [[ -z $text_target ]]; then echo "Please specify INSERT target"; exit 1; fi
		if [[ -z $text_added ]]; then echo "Please specify INSERT text"; exit 1; fi
		if [[ -z $insert_direction ]]; then echo "Please specify INSERT direction"; exit 1; fi

		if [[ $insert_direction == "b" ]]; then
			NEW_NAME="${OLD_NAME/"$text_target"/"$text_added$text_target"}";
		elif [[ $insert_direction == "a" ]]; then
		 	NEW_NAME="${OLD_NAME/"$text_target"/"$text_target$text_added"}";
		fi

		mv "$OLD_NAME" "$NEW_NAME"
	elif [[ $ACTION == "replace" ]]; then
        local result
        IFS='|' read -ra result <<< "$ACTIONARG"
        text_target="${result[0]}"
        new_text="${result[1]}"

		if [[ -z $text_target ]]; then echo "Please specify REPLACE target"; exit 1; fi
		if [[ -z $new_text ]]; then echo "Please specify REPLACE text"; exit 1; fi

		NEW_NAME="${OLD_NAME/"$text_target"/"$new_text"}";


		mv "$OLD_NAME" "$NEW_NAME"
	elif [[ $ACTION == "remove" ]]; then
		NEW_NAME="$DIR/${FILE_NAME//"$ACTIONARG"/}"
		mv "$OLD_NAME" "$NEW_NAME"
	elif [[ $ACTION == "meta-insert" ]]; then
		local result
		IFS='|' read -ra result <<< "$ACTIONARG"
		meta_name="$(get_meta_value "${result[0]}")"
		meta_added="${result[1]}"
		insert_direction="${result[2]}"

		local meta_value=$(get_meta $meta_name "$OLD_NAME")

		if [[ -z $meta_name ]]; then echo "Please specify meta name"; exit 1; fi
		if [[ -z $meta_added ]]; then echo "Please specify ${result[0]} INSERT value"; exit 1; fi
		if [[ -z $insert_direction ]]; then echo "Please specify ${result[0]} INSERT direction"; exit 1; fi

		if [[ $insert_direction == "b" ]]; then
			NEW_NAME="${OLD_NAME/"[$meta_value]"/"[$meta_added$meta_value]"}";
		elif [[ $insert_direction == "a" ]]; then
		 	NEW_NAME="${OLD_NAME/"[$meta_value]"/"[$meta_value$meta_added]"}";
		fi
	elif [[ $ACTION == "meta-replace" ]]; then
		local result
		IFS='|' read -ra result <<< "$ACTIONARG"
		meta_name="$(get_meta_value "${result[0]}")"
		meta_arg="${result[1]}"

		local meta_value=$(get_meta $meta_name "$OLD_NAME")

		if [[ -z $meta_name ]]; then echo "Please specify meta name"; exit 1; fi
		if [[ -z $meta_added ]]; then echo "Please specify ${result[0]} REPLACE value"; exit 1; fi

		NEW_NAME="${OLD_NAME/"[$meta_value]"/"[$meta_arg]"}";
	fi

    printf "%*s\tOld Name:\t${RED}%s${NCL}\n"      $((indent+4)) '' "$OLD_NAME"
	printf "%*s\tNew Name:\t${GRE}%s${NCL}\n"      $((indent+4)) '' "$NEW_NAME"
	echo ======================================================
}

walk() {
	for entry in "$1"/*; do [[ -f "$entry" ]] && handle_file; done
	for entry in "$1"/*; do [[ -d "$entry" ]] && walk "$entry"; done
}


if [[ -z "${1}" ]]; then
	echo "Please specify the action";
	exit 1;
else
	ACTION="${1}";
fi

if [[ -z "${2}" ]]; then
	echo "Please specify the path";
	exit 1;
else
	cd "${2}" && ABS_PATH="${PWD}"
fi

if [[ -z "${3}" ]]; then
	echo "Please specify the action argument";
	exit 1;
else
	ACTIONARG="${3}";
fi

read -p "Are you sure want to prepend all file in '${ABS_PATH}' with $3? (y/n) " choice
case "$choice" in 
  y|Y ) echo "Running handlefile...";;
  n|N ) exit 1;;
  * ) exit 1;;
esac

walk "${ABS_PATH}"
echo
